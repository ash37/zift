<%# app/views/rosters/_cell_content.html.erb %>
<%
  # Find any shifts for this user on this date
  shifts = roster.shifts.where(user: user, start_time: date.all_day)
  if selected_location_id.present?
    shifts = shifts.where(location_id: selected_location_id)
  end

  # FIX: Check for an approved unavailability request that overlaps with this day
  approved_unavailability = user.unavailability_requests
                                .where(status: UnavailabilityRequest::STATUSES[:approved])
                                .where("starts_at <= ? AND ends_at >= ?", date.end_of_day, date.beginning_of_day)
                                .first
%>
<div id="<%= dom_id(roster, "cell_content_#{user.id}_#{date}") %>" class="shifts-container h-full min-h-[80px]"
      data-controller="drag"
      data-drag-enabled-value="<%= roster.draft? %>"
      data-drag-url-value="/shifts/:id"
      data-drag-user-id-value="<%= user.id %>"
      data-drag-date-value="<%= date.to_s %>">

  <%# FIX: Add conditional rendering based on the unavailability check %>
  <% if approved_unavailability %>
    <div class="relative w-full border-2 p-3 rounded-2xl bg-orange-100 text-orange-500 opacity-50 text-xs flex flex-col justify-center text-center space-y-1">
      <p class="font-semibold">UNAVAILABLE</p>
      <p>
        <% unless approved_unavailability.starts_at == approved_unavailability.starts_at.beginning_of_day %>
          <%= format_shift_time(approved_unavailability.starts_at) %> - <%= format_shift_time(approved_unavailability.ends_at) %>
        <% else %>
          All Day
        <% end %>
      </p>
      <p><%= approved_unavailability.reason %></p>
    </div>
  <% else %>
    <%# --- This is the original logic for when the user IS available --- %>
    <% if shifts.any? %>
      <% shifts.each do |shift| %>
        <%= render "shifts/shift", shift: shift, selected_location_id: selected_location_id %>
      <% end %>
    <% else %>
      <% if roster.draft? %>
        <%= link_to new_shift_path(user_id: user.id, roster_id: roster.id, date: date, location_id: selected_location_id),
                    data: { turbo_frame: "assign_shift_modal" },
                    class: "block w-full h-full text-center group",
                    aria_label: "Add shift for #{user.name} on #{date.strftime('%A, %B %d')}" do %>
          <div class="flex items-center justify-center h-full">
            <span class="mt-8 inline-block text-zinc-300 transition-transform duration-200 group-hover:text-violet-500 group-hover:scale-125">
              <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5">
                <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" />
              </svg>
            </span>
          </div>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
</div>